<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"https://www.why3.org/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="Z3" version="4.15.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="1" name="CVC5" version="1.1.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="6" name="Alt-Ergo" version="2.6.1" timelimit="5" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="init.mlw"/>
<theory name="AStar">
 <goal name="Nonneg_path" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="Nonneg_path.0" proved="true">
  <proof prover="1" obsolete="true"><result status="valid" time="0.007684" steps="6976"/></proof>
  <proof prover="6"><result status="valid" time="0.015778" steps="0"/></proof>
  </goal>
  <goal name="Nonneg_path.1" proved="true">
  <proof prover="1" obsolete="true"><result status="valid" time="0.019052" steps="10664"/></proof>
  <proof prover="6"><result status="valid" time="0.016350" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Path_inversion" proved="true">
 <proof prover="6"><result status="valid" time="0.014366" steps="21"/></proof>
 </goal>
 <goal name="Path_implies_shortest_path" proved="true">
 <transf name="introduce_premises" proved="true" >
  <goal name="Path_implies_shortest_path.0" proved="true">
  <transf name="induction" proved="true" arg1="d">
   <goal name="Path_implies_shortest_path.0.0" expl="base case" proved="true">
   <proof prover="0"><result status="valid" time="0.015597" steps="64070"/></proof>
   </goal>
   <goal name="Path_implies_shortest_path.0.1" expl="recursive case" proved="true">
   <proof prover="0"><result status="valid" time="0.129329" steps="540539"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="Path_implies_shortest_path_from_neighbours" proved="true">
 <proof prover="6"><result status="valid" time="0.077694" steps="807"/></proof>
 </goal>
 <goal name="Completeness_of_paths_in_a_graph" proved="true">
 <transf name="induction_pr" proved="true" >
  <goal name="Completeness_of_paths_in_a_graph.0" proved="true">
  <proof prover="1" obsolete="true"><result status="valid" time="0.011234" steps="10249"/></proof>
  <proof prover="6"><result status="valid" time="0.013456" steps="0"/></proof>
  </goal>
  <goal name="Completeness_of_paths_in_a_graph.1" proved="true">
  <proof prover="1" obsolete="true"><result status="valid" time="0.014574" steps="11249"/></proof>
  <proof prover="6"><result status="valid" time="0.016564" steps="35"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="reconstruct_path&#39;vc" expl="VC for reconstruct_path">
 <transf name="split_vc" >
  <goal name="reconstruct_path&#39;vc.0" expl="termination">
  <proof prover="0"><result status="timeout" time="5.000000" steps="16218583"/></proof>
  <proof prover="1"><result status="unknown" time="0.017991" steps="8816"/></proof>
  <proof prover="6"><result status="timeout" time="5.000000" steps="91140"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="a_star_algorithm&#39;vc" expl="VC for a_star_algorithm">
 <transf name="split_vc" >
  <goal name="a_star_algorithm&#39;vc.0" expl="termination">
  <proof prover="0"><result status="timeout" time="5.000000" steps="12504963"/></proof>
  <proof prover="1"><result status="timeout" time="5.000000" steps="264597"/></proof>
  <proof prover="6"><result status="timeout" time="5.000000" steps="91268"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.1" expl="precondition" proved="true">
  <proof prover="6"><result status="valid" time="0.015110" steps="22"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.2" expl="termination">
  <proof prover="0"><result status="timeout" time="5.000000" steps="9401952"/></proof>
  <proof prover="1"><result status="timeout" time="5.000000" steps="601145"/></proof>
  <proof prover="6"><result status="timeout" time="5.000000" steps="115104"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.3" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.011965" steps="12513"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.4" expl="loop variant decrease" proved="true">
  <proof prover="1"><result status="valid" time="0.035065" steps="15851"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.5" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.019019" steps="103628"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.6" expl="loop variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.020838" steps="73"/></proof>
  </goal>
  <goal name="a_star_algorithm&#39;vc.7" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.019411" steps="103524"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
